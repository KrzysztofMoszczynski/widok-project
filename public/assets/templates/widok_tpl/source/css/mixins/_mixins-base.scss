@mixin underline-bg($underline-color: #000, $underline-size: 2px, $underline-position: 1.2em) {
  background-image: linear-gradient(to right, $underline-color 50%, $underline-color 50%);
  background-position: 0 $underline-position;
  background-repeat: repeat-x;
  background-size: 6px $underline-size;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  -ms-box-shadow: $shadow;
  -o-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin transition($duration) {
  -webkit-transition: all $duration ease 0s;
  -moz-transition: all $duration ease 0s;
  -ms-transition: all $duration ease 0s;
  -o-transition: all $duration ease 0s;
  transition: all $duration ease 0s;
}

@mixin scale($scale) {
  -webkit-transform: scale($scale);
  -moz-transform: scale($scale);
  -ms-transform: scale($scale);
  -o-transform: scale($scale);
  transform: scale($scale);
}

@mixin translate3d($mixin_params_translate3d) {
  -webkit-transform: translate3d($mixin_params_translate3d);
  -moz-transform: translate3d($mixin_params_translate3d);
  -ms-transform: translate3d($mixin_params_translate3d);
  -o-transform: translate3d($mixin_params_translate3d);
  transform: translate3d($mixin_params_translate3d);
}

@mixin animation($name, $duration, $iteration-count, $timing-function, $fill-mode, $delay) {
  -webkit-animation-name: $name;
  -webkit-animation-duration: $duration;
  -webkit-animation-iteration-count: $iteration-count;
  -webkit-animation-timing-function: $timing-function;
  -webkit-animation-fill-mode: $fill-mode;
  -webkit-animation-delay: $delay;
  -moz-animation-name: $name;
  -moz-animation-duration: $duration;
  -moz-animation-iteration-count: $iteration-count;
  -moz-animation-timing-function: $timing-function;
  -moz-animation-fill-mode: $fill-mode;
  -moz-animation-delay: $delay;
  animation-name: $name;
  animation-duration: $duration;
  animation-iteration-count: $iteration-count;
  animation-timing-function: $timing-function;
  animation-fill-mode: $fill-mode;
  animation-delay: $delay;
}

// prevent <a> with really long text from breaking out of the flow
@mixin word-wrap() {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

// Burger

// Burger parts
//
// (---) top    -> &::before
// [---] middle -> &
// (---) bottom -> &::after

// Vendor prefixes
$sass-burger-add-vendor-prefixes: true !default;

// Burger
@mixin burger($width: 25px, $height: 2px, $gutter: 9px, $color: $color_gray_dark, $border-radius: 0, $transition-duration: $transition_duration_base) {
  $burger-height: $height !global;
  $burger-gutter: $gutter !global;

  position: relative;
  margin-top: $height + $gutter;
  margin-bottom: $height + $gutter;

  @if $sass-burger-add-vendor-prefixes {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
  user-select: none;

  &, &::before, &::after {
    display: block;
    width: $width;
    height: $height;
    background-color: $color;
    @if $border-radius != 0 {
      border-radius: $border-radius;
    }

    @if $sass-burger-add-vendor-prefixes {
      -webkit-transition-property: background-color, -webkit-transform;
      -moz-transition-property: background-color, -moz-transform;
      -o-transition-property: background-color, -o-transform;
    }
    transition-property: background-color, transform;

    @if $sass-burger-add-vendor-prefixes {
      -webkit-transition-duration: $transition-duration;
      -moz-transition-duration: $transition-duration;
      -o-transition-duration: $transition-duration;
    }
    transition-duration: $transition-duration;
  }

  &::before, &::after {
    position: absolute;
    content: "";
  }

  &::before {
    top: -($height + $gutter);
  }

  &::after {
    top: $height + $gutter;
  }
}


// Select parts of the burger
@mixin burger-parts {
  &, &::before, &::after {
    @content;
  }
}

@mixin burger-top {
  &::before {
    @content;
  }
}

@mixin burger-middle {
  & {
    @content;
  }
}

@mixin burger-bottom {
  &::after {
    @content;
  }
}


// Burger animations
@mixin burger-to-cross {
  & {
    background-color: transparent;
  }
  &::before {
    @if $sass-burger-add-vendor-prefixes {
      -webkit-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
      -moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
      -ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
      -o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
    }
    transform: translateY($burger-gutter + $burger-height) rotate(45deg);
  }
  &::after {
    @if $sass-burger-add-vendor-prefixes {
      -webkit-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
        -moz-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
          -ms-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
            -o-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
              }
    transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
      }
}
// Burger ends here